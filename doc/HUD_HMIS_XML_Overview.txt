

December 1, 2015








HMIS XML v4.1.0 Data Exchange 
Format Specifications
 for HMIS Data Standards Version 3.0, effective October 1, 2015





HUD HMIS XML Schema Documentation 
12/01/2015, version: 4.1.0

This document was developed for the US Department of Housing and Urban Development (HUD), Office of Special Needs Assistance Programs (SNAPS) in the Office of Community Planning and Development, under a contract with Abt Associates, Inc..

Primary author: 
Eric Jahn, Alexandria Consulting 

Contributing authors:
Molly McEvilley, Abt Associates


Table of Contents
	Introduction	3
	Audience for this Document	3
	Purpose of this Document	3
	Scope of the HMIS XML Schema	3
	Alternatives	3
	Location of the HMIS XML Schema	4
	Components	4
	Overall Structure	4
	Figure 1: HMIS XML 4.1.0 Basic Structure	5
	Inline Documentation	5
	Browsable Graphical Documentation	5
	Relationship to Logical Model	5
	Cardinality Enforcement	5
	Changes from Previous Version	6
	Technology Used	6
	XML Schema 1.1	6
	Extensibility	6
	Hashing	6
	Keys	7
	Conditional Validation	7
	Examples	7
	Example Instance	7
	Example Custom Extension	7
	Change Process	7
	HMIS XML Schema Hosting	8
	Further Information	8



Document changes with this version are available in the online versioning system.
Introduction
Audience for this Document
This document is intended for developers and project managers implementing software systems which need to transmit HUD HMIS project and client information over a network.  Because of this, it is inherently a technical document.  Those new to eXtensible Markup Language (XML) should first familiarize themselves with XML technology in general, before examining the actual schema product and the “Technology Used” section of this document.
Purpose of this Document
The 2014 (version 3.0) HMIS Data Standards consisting of the HMIS Data Dictionary and the HMIS Data Standards Manual, were released jointly by the Department of Housing and Urban Development (HUD), the Department of Health and Human Services (HHS), and the Department of Veterans Affairs (VA) on September 1, 2015. The data elements defined by the 2014 v3.0 standards must be implemented by HMIS software providers and HMIS administrators by October 1, 2015.  

The HUD HMIS XML Schema, version 4.1.0 is a format for transferring this HMIS data.  Please note that the XML Schema version numbering (v4.1.0) is different from the HMIS Data Standard version numbering (v3.0).  The data elements are defined in the September 2015 HUD HMIS Data Manual, and further specified by the September 2015 HUD HMIS Data Dictionary and 2015 HMIS Logical Model.  The Logical Model, Manual, and Dictionary all changed between 2014 v2.1 and 2014 v3.0, and so the XML Schema has been changed accordingly.  The key benefit of XML is its ability to be validated and extended.  This means that systems both sending and receiving data can independently and automatically check if this data is being sent to specifications.  This helps to evaluate data quality and correctness independently.  The HMIS XML Schema can be customized, as well, but still keep the ability to check the generated data for accuracy against this original HMIS XML Schema.  This XML format can be used for data migrations between systems, or the data types defined within it could be individually referenced in custom (not officially HUD specified) Web API methods.
Scope of the HMIS XML Schema
This schema requires complete data sets for each grouping of data (groups like Inventory, Project, Path Status, etc.), to accommodate the use case of transmitting complete data sets for reporting, periodic bulk data uploads from a partner agency to an HMIS or data warehouse, or for HMIS system migration purposes.  Because of this intended use case, many of the data elements are not optional.  For example, if an XML document following the Schema includes any of the data elements within the “Funder” class of the Logical Model, it must include almost all of the required data elements within Funder (since for Funder, all its elements are required, except one).  In past versions of the HMIS XML Schema (v3.1 and prior), most data elements were listed as optional, to accommodate use cases other than reporting complete data sets.  For other use cases, the individual data groups could be individually transmitted in bulk (by removing the key and cardinality restrictions/assertions within the Export element), but that is beyond the scope of this current specification.   It should be possible to export, in a standard format, all data entered into an HMIS for any data element defined by the HMIS Data Dictionary, regardless of whether or not a given data element is required based on project type or funder. 

Alternatives
For HMIS implementers seeking an alternative format for HMIS client data transmission, see the HUD Comma-Separated Values (CSV) for HMIS data, version 4.11.  Both the XML and CSV sister formats are based off the same 2014 HMIS Logical Model v3.0 (released Sept. 2015), and are completely semantically and logically compatible because of this.
Location of the HMIS XML Schema
The HMIS XML 4.1.0 and previous major releases are hosted at http://www.hudhdx.info/VendorResources.aspx .  They are also kept in a versioning system.
Components
This publication has multiple parts, each is available in two places: the HUD HDX link above, and a development website, where new versions are discussed, and all changes are stored. 

This document, which includes:
A rationale for the schema, including an overview of the process, and an explanation of the model.
A description of the steps involved beyond creation of a data standard, including development of communication protocols and documentation of responsibilities.
A brief discussion of the future path of HMIS XSD development.
An XML Schema Definition (XSD) document: HMIS XSD v4.1.0.  It contains inline documentation which correlates each schema element to an item in the HMIS Data Dictionary and Data Manual.  Searching the HMIS XML Schema for the corresponding HMIS Data Dictionary data element numeral provides a cross-walk between technical schema and the HMIS Data Standards.
A sample, valid XML document (temporary location) with fictitious data.
An example extension schema (temporary location) of the HMIS XSD 4.0, illustrating how to add an additional data element.
A sample, valid XML instance document for the extended 4.0 schema.
Online, browsable, graphical documentation (temporary location until posted on the http://www.hudhdx.info/VendorResources.aspx site) for version 4.1.0 
Overall Structure
The HMIS XML 4.1.0 structure is intended to be completely compliant with its parent specification, the 2014 v3.0 HUD HMIS Logical Model (released Sept. 2015), and with its other similarly purposed product, the HUD HMIS CSV 4.1. To keep it simple, the XML continues to have a flat, single file structure.  Almost all the data types are one level below the Export data element and key references enforce relationships between types.  This allows the system serializing the XML to not be constrained by having to be in the correct context to add elements.  Elements can be added in any order within the “Export” element.

Figure 1: HMIS XML 4.1.0 Basic Structure

Inline Documentation
The HMIS Data Dictionary and Data Manual data element reference is listed within each HMIS XML data element, whenever available.  Some data elements, such as Export, do not reference a data element in the Dictionary/Manual, since they only serve a functional purpose for data transfer.
Browsable Graphical Documentation

A browsable list of all the data element in the HMIS XML Schema is available (temporary location, to be moved to hudhdx.info site).  The definitions for each data element are available in the browsable documentation as well.




Relationship to Logical Model
The HMIS XML Schema version 4.1 complies with Logical Model (temporary location until posted on HUD HDX), The various relationship lines within the Logical Model are enforced by requiring matching IDs/Keys (see the section on Keys) between the two data types (like CoC to Inventory, or Exit to Enrollment) joined by a line in the Logical Model.  

Cardinality Enforcement
The Logical Model is also very specific about cardinalities (like “many-to-many” and “zero to one”) between the related data types.  HMIS XML Schema strictly enforces cardinality by means of XPath 2.0 assertions2; a new feature of XML Schema 1.1.  If the Logical Model requires “zero to one” of something (like Date of Engagements per Enrollment), the HMIS XML 4.0 will likewise require valid XML documents to declare the required zero or one occurrence.
Changes from Previous Version
All data elements are updated from the version 2.1 2014 (released in Sept. 2014) to the version 3.0 2014 (released Sept. 2015) HUD HMIS Data Standard elements.  The changes are represented in the corresponding Logical Model changes listed at: https://github.com/hmis-interop/logical-model/blob/master/doc/change_lists/logical_model_changes_2014-2015.txt . 
Line-by-line comparison of version 4.0.1 to version 4.1.0: https://github.com/hmis-interop/xml/compare/v4.0.1...v4.1.0 
Conditional validation of newly added dependent fields.  See the section below on “Conditional Validation”.
Technology Used
XML Schema 1.1
XML Schema version 1.1 is the format and standard used by the HMIS XML Schema 4.1.   It was first introduced with HMIS XML Schema 4.0.0.  XML Schema 1.1 is a superset of the XML Schema 1.0, used in version 3.0 and below of the HMIS XML format, and is forward compatible from XML Schema 1.0.  XML Schema 1.1 only adds additional features to those of 1.0, three of which are used by HMIS XML 4.1.  These are extensibility features, conditional validation, and better key reference enforcement features.  All major XML parsers have been updated to support version Schema 1.1, which was released in 2007, resulting in XML Schema 1.1 now being a mature technology.
Extensibility
Flexible vendor extensions are much more easily accomplished with XML Schema 1.1, as opposed to the previous XML Schema 1.0.  To extend the HMIS XML Schema 4.0 using this new feature, please read the documentation on defaultOpenContent mode="interleave" at the The World Wide Web Consortium (W3C) website.  This new feature permits is implemented in HMIS XML, allowing the addition of new data elements anywhere in the HMIS XML Schema, and the original parts still can be found and validated.  The newly added extensions which a software provider might add should be validated by a second XML Schema.  The second XML Schema can be defined elsewhere, and both the HMIS Schema and the new extension schema can function in concert to validate the extended XML documents.  The extended schema will still validate against the official HUD HMIS XML 4.0, but it will not invalidate the custom elements added.

Currently, HUD HMIS is not publishing any official extensions, but the parties engaged in data integration may negotiate the use of an extension schema to be overlayed onto the HUD HMIS XML Schema for the addition of new data types, attributes, and elements.
Hashing
Hashing has been reintroduced in version 4.1.0, as it was absent in version 4.0.  Hashing is possible for personal identifiers.  There are three possible values for the “hashStatus” attribute:

“Unhashed” - Data are expected conform to data type and field length parameters defined in the schema. 
“SHA-1 RHY” - The SHA-1 algorithm produces a 40-character string of letters and numbers. More specifically, for the following identifiers, a specific hashing method is required:
FirstName – SHA-1 hash of the SOUNDEX of the value for first name; 
MiddleName (S40) – SHA-1 hash of the SOUNDEX of the value for middle name; 
LastName (S40) – SHA-1 hash of the SOUNDEX of the value for last name; and 
SSN (S44) – concatenation of the unhashed last 4 digits of the SSN followed by SHA-1 hash of the full SSN.
“Other” - Identifies exports in which data are hashed based on parameters mutually agreed upon by the sender and recipient of the XML data.
Keys
The HMIS XML schema uses keys and references to those keys (aka “keyrefs”) to create the relationships defined in the Logical Model.   The keys are enforced, so that if an enrollment in the XML references a project ID which isn’t defined somewhere else in the XML, it will raise a validation error, which enforces complete, self-referential data sets.  Keys also enable the flattened structure of the schema.  An advantage of a flattened schema is that data elements are not repeated within deeply nested structures.  Keys also makes programming simpler, since there are not so many nested logic structures to handle.  The flattened structure is also more flexible, since not every related data element has to be mentioned within the same tree branch of the XML.

Conditional Validation
The ability to check for a specific precondition before validating is employed in HMIS XML Schema 4.1.  The main use is checking first to see if a previous question has been answered in a specific way before allowing a follow-up question to be asked.  As with the CSV specification, dependent fields will be null unless the parent field contains a value defined by the HMIS Data Dictionary as triggering the dependent field.  Conditional validation is only applied for certain newly added questions introduced in version 3.0 (2015) of the HUD HMIS Data Standard, and not for any previously existing questions, and their coverage of all possible conditional logic is not comprehensive.  The main purpose of this conditional validation is to catch typical problems, and  to enforce some of the most clearly described question workflows in the Data Standard.  Conditional logic is implemented using XPath 2.0 assertions, similar to the existing key reference and cardinality enforcement assertions.  This conditional validation can slow the validation time for large XML files, so it can be turned of by simply commenting out the various lines in the 4.1.0 Schema beginning with “assert”.

Here is an example of conditional validation in the schema (at line 719), using an assertion:
<!--Testing if Destination is 17, before allowing use of OtherDestination-->
<xs:assert test="if (hmis:Destination/text()='17') then boolean(hmis:OtherDestination) else (if (not(hmis:Destination/text()='17')) then (not(boolean(hmis:OtherDestination))) else false())"/>
Examples
Example Instance
A fairly exhaustive example HMIS XML instance is available in the repository for download (temporary location).  
Example Custom Extension
An example HMIS XML extension is available in the repository for download (temporary location).  
Change Process
To request changes to the HUD HMIS XML Schema, there are multiple ways to register requests.
A software issue tracker is available at: https://github.com/hmis-interop/xml/issues
A HUD sponsored HMIS Software Provider forum regularly hosts a revision process to maintain the HMIS XML Schema 
Email hmisdx@gmail.com (temporary address) to discuss the request with a HUD Technical Assistance representative
HMIS XML Schema Hosting
HMIS XML schema development archives and issues list is unofficially (not an official HUD website) hosted at: https://github.com/hmis-interop/xml.  The tags on that site contain the various versions available, from which the differences between versions can be listed in detail.



Further Information
Contact the OneCPD Ask A Question to request general assistance with the HMIS XML Schema.  For direct technical recommendations or questions, send an email to hmisdx@gmail.com (temporary email address).  To log a detailed change directly, an issue tracker is available.
