









DRAFT HMIS XML FY2020 Data Exchange Format Specifications
aligns with HMIS Data Standards Version 2020 version 1.3, effective October 1, 2019






HUD HMIS XML Schema Documentation 
8/26/2019, version: FY2020, succeeds v6.1.2

This document was developed for the US Department of Housing and Urban Development (HUD), Office of Special Needs Assistance Programs (SNAPS) in the Office of Community Planning and Development, under a contract with Abt Associates, Inc..

Primary author: 
Eric Jahn, Alexandria Consulting LLC

Contributing authors:
Molly McEvilley, Square Peg Consulting


Table of Contents
	Overview	3
	Audience for this Document	3
	Purpose of this Document	3
	Alternative	3
	Use Cases and Extension	3
	Scope of the HMIS XML Schema	4
	Location of the HMIS XML Schema	4
	Components	4
	Overall Structure	4
	Figure 1: HMIS XML version 6 Basic Structure	5
	Inline Documentation	5
	Browsable Graphical Documentation	5
	Relationship to Logical Model	6
	Cardinality Enforcement	6
	Changes from Previous Version	6
	Technology Overview	6
	XML Schema 1.1	6
	Extensibility	6
	Hashing	7
	Keys	7
	Conditional Validation	7
	Examples	8
	Example Instances	8
	Example Custom Extension and Instance	8
	Change Process	8
	HMIS XML Schema Hosting	8
	Further Information	8
	Change List	9



Document changes with this version are available in the online versioning system for version FY2020.

Overview
Audience for this Document
This document is intended for developers and project managers implementing software systems which need to transmit HUD HMIS project and client information over a network.  Because of this, it is inherently a technical document.  Those new to eXtensible Markup Language (XML) should first familiarize themselves with XML technology in general, before examining the actual schema product and the “Technology Used” section of this document.
Purpose of this Document
The US Department of Housing and Urban Development (HUD), in cooperation with the Department of Health and Human Services (HHS) and the Department of Veterans Affairs (VA), is responsible for the Homeless Management Information System (HMIS) Data Standards, which define data collection requirements for any software used as an HMIS. The first version of the data standards was published in 2004; the current version (2020 v1.3) has an effective date of October 1, 2019.   

The HUD HMIS XML Schema, version FY2020 specifies a format for transferring this HMIS data.  The data elements are defined in the June 2019 FY2020 HUD HMIS Data Manual v1.3, and further specified by the August 2019 FY2020 HUD HMIS Data Dictionary v1.4 and FY2020 HMIS Logical Model.  The Logical Model, Manual, and Dictionary all changed between 2018 v6 and FY2020, so the XML Schema has been changed accordingly.  The key benefit of XML is its ability to be validated and extended.  The specifications (XML Schema) are also machine readable.  Validation capability means that systems both sending and receiving data can independently and automatically check if this data is being sent to specifications.  This helps to evaluate data quality and correctness independently, without either transmitting party (sender/receiver) needing to develop validation software.  The HMIS XML Schema can be customized, as well, but still keep the ability to check the generated data for accuracy against this original HMIS XML Schema.  This XML format can be used for data migrations between systems, or the data types defined within it could be individually referenced in custom web methods.
Alternative
For HMIS implementers seeking an alternative format for HMIS client data transmission, see the equivalent HUD Comma-Separated Values (CSV) for HMIS data, version FY20201.  Both the XML and CSV sister formats are based off the same HMIS Logical Model  (released July 2019), and are completely semantically and logically compatible because of this fact.  Differences in element groupings exist, due to file count considerations for the CSV, which is somewhat denormalized from the Logical Model. 
Use Cases and Extension
There are a number of purposes for which HMIS data might be exported from one system and imported to another. The use cases that the HMIS CSV and HMIS XML formats are primarily intended to support include migration from one HMIS application to another; warehousing of data from multiple HMIS implementations for analysis and reporting; and participation in a local HMIS implementation by regularly providing data entered into and exported from an alternate database. In general, HUD expects that it should be possible to export, in a standard format, all data entered into an HMIS for any data element defined by the HMIS Data Dictionary, regardless of whether or not a given data element is required based on project type or funder. Specific requirements related to the overall functionality of HMIS applications and export and import processes in particular will be established by the forthcoming HMIS Software and Data Quality Standards and may result in revisions to this document. The HMIS Data Dictionary defines several hundred fields. HUD is aware that there is, in addition, a wide variety of expanded and customized data collection in HMIS implementations across the country. While HUD is cognizant that the exchange of additional data that may be included in an HMIS will often be useful and necessary, it is not practical to include accommodations for every potential need, even if it were possible to anticipate them. As a result, the scope of this document is generally limited to data collected in a manner consistent with the HMIS Data Dictionary. The HMIS XML format may be extended to include additional fields by parties engaged in HMIS data exchange; technical assistance may be available. To request technical assistance please visit www.hudexchange.info.
Scope of the HMIS XML Schema
This schema requires complete data sets for each grouping of data (groups like Inventory, Project, Path Status, etc.), to accommodate the use case of transmitting complete data sets for reporting, periodic bulk data uploads from a partner agency to an HMIS or data warehouse, or for HMIS system migration purposes.  Because of this intended use case, many of the data elements are not optional.  For example, if an XML document following the Schema includes any of the data elements within the “Funder” class of the Logical Model, it must include almost all of the required data elements within Funder (since for Funder, all its elements are required, except one).  In past versions of the HMIS XML Schema (prior to v4.0), most data elements were listed as optional, to accommodate use cases other than reporting complete data sets.  For other use cases, the individual data groups could be individually transmitted in bulk (by removing the key and cardinality restrictions/assertions within the Export element), but that is beyond the scope of this current specification.   It should be possible to export, in a standard format, all data entered into an HMIS for any data element defined by the HMIS Data Dictionary, regardless of whether or not a given data element is required based on project type or funder. 

Location of the HMIS XML Schema
The HMIS XML Schema version FY2020 and previous major releases are hosted at http://www.hudhdx.info/VendorResources.aspx.  They are also kept in a versioning system.
Components
This publication has multiple parts, each is available in two places: the HUD HDX link above, and a development website, where new versions are discussed, issues logged, and all incremental changes are stored. 

    • This document, which includes:
        ◦ A rationale for the schema, including an overview of the process, and an explanation of the model.
        ◦ A description of the steps involved beyond creation of a data standard, including development of communication protocols and documentation of responsibilities.
        ◦ A brief discussion of the future path of HMIS XSD development.
    • An XML Schema Definition (XSD) document: HMIS XSD version FY2020.  It contains inline documentation which correlates each schema element to an item in the HMIS Data Dictionary and Data Manual.  Searching the HMIS XML Schema for the corresponding HMIS Data Dictionary data element numeral provides a cross-walk between technical schema and the HMIS Data Standards.
    • A sample, valid XML document with fictitious data.  A minimal instance is also available there for testing.
    • An example extension schema of the HMIS XSD version FY2020, illustrating how to add an additional data element.
    • A sample, valid XML instance document for the extended HMIS XSD version FY2020.
    • Online, browsable, graphical documentation for HMIS XSD version FY2020. 

Overall Structure
The HMIS XML version 6 structure is intended to be completely compliant with its parent specification, the FY2020 HUD HMIS Logical Model (released July 2019), and with its other similarly purposed product, the HUD HMIS CSV version FY2020. To keep its structure simple, the XML continues to be comprised of a relatively flat, single file.  Almost all the data types are one level below the Export data element and key references enforce relationships between types.  This allows the system serializing the XML to not be constrained by having to be in the correct context to add elements.  Elements can be added in any order within the “Export” element.

Figure 1: HMIS XML version 6 Basic Structure

Inline Documentation
The HMIS Data Dictionary and Data Manual data element reference is listed within each HMIS XML data element, whenever available.  Some data elements, such as Export, do not reference a data element in the Dictionary/Manual, since they only serve a functional purpose for data transfer.
Browsable Graphical Documentation

A browsable list of all the data element in the HMIS XML Schema is available.  The definitions for each data element are available in the browsable documentation as well.

Relationship to Logical Model
The HMIS XML Schema version FY2020 complies with Logical Model, The various relationship lines within the Logical Model are enforced by requiring matching IDs/Keys (see the section on Keys) between the two data types (like Project to Inventory, or Exit to Enrollment) joined by a line in the Logical Model.  

Cardinality Enforcement
The Logical Model is also very specific about cardinalities (like “many-to-many” and “zero to one”) between the related data types.  HMIS XML Schema strictly enforces cardinality by means of XPath 2.0 assertions2; a new feature of XML Schema 1.1.  If the Logical Model requires “zero to one” of something (like Date of Engagements per Enrollment), the HMIS XML v6 will likewise require valid XML documents to declare the required zero or one occurrence.
Changes from Previous Version
    • All data elements are updated from the HUD HMIS Data Standard 2017 version 1.3 (released in August 2018) to the HUD HMIS Data Standard FY2020 version 1.4 (released August 2019) elements.  
    • Line-by-line comparison of version 6.1.2 to version FY2020: https://github.com/hmis-interop/xml/compare/v6.1.2...FY2020 (this will stay updated with later bug-fixes).  For a less concise list of changes, see the Overview of Changes below. 
    • Conditional validation of newly added dependent fields.  See the section below on Conditional Validation.

Technology Overview
XML Schema 1.1
XML Schema version 1.1 is the format and standard used by the HMIS XML Schema version FY2020.   It was first introduced with HMIS XML Schema 4.0.  XML Schema 1.1 is a superset of the XML Schema 1.0, used in version 3.1 and below of the HMIS XML format, and is forward compatible from XML Schema 1.0.  XML Schema 1.1 only adds additional features to those of 1.0, three of which are used by HMIS XML Schema FY2020. These are extensibility features, conditional validation, and better key reference enforcement features.  All major XML parsers have been updated to support version Schema 1.1, which was released in 2007, resulting in XML Schema 1.1 now being a mature technology.  A practical example of command line validation using the Xerces XML Parser is in the wiki.
Extensibility
Flexible vendor extensions are much more easily accomplished with XML Schema 1.1, as opposed to the previous XML Schema 1.0.  To extend the HMIS XML Schema v6 using this new feature, please read the documentation on defaultOpenContent mode="interleave", xs:redefine, and xs:override and at the The World Wide Web Consortium (W3C) website.  This new feature permits is implemented in HMIS XML, allowing the addition of new data elements anywhere in the HMIS XML Schema, and the original parts still can be found and validated.  The newly added extensions which a software provider might add should be validated by a second XML Schema.  The second XML Schema can be defined elsewhere, and both the HMIS Schema and the new extension schema can function in concert to validate the extended XML documents.  The extended schema will still validate against the official HUD HMIS XML Schema v6, but it will not invalidate the custom elements added.

Currently, HUD HMIS is not publishing any official extensions, but the parties engaged in data integration may negotiate the use of an extension schema to be overlaid onto the HUD HMIS XML Schema for the addition of new data types, attributes, and elements.
Hashing
Hashing is possible for personal identifiers.  There are three possible values for the “hashStatus” attribute:

    • “Unhashed” - Data are expected conform to data type and field length parameters defined in the schema. 
    • “SHA-1 RHY” - The SHA-1 algorithm produces a 40-character string of letters and numbers. More specifically, for the following identifiers, a specific hashing method is required:
        ◦ FirstName – SHA-1 hash of the SOUNDEX of the value for first name; 
        ◦ MiddleName (S40) – SHA-1 hash of the SOUNDEX of the value for middle name; 
        ◦ LastName (S40) – SHA-1 hash of the SOUNDEX of the value for last name; and 
        ◦ SSN (S44) – concatenation of the unhashed last 4 digits of the SSN followed by SHA-1 hash of the full SSN.
    • “Other” - Identifies exports in which data are hashed based on parameters mutually agreed upon by the sender and recipient of the XML data.
Keys
The HMIS XML schema uses keys and references to those keys (aka “keyrefs”) to create the relationships defined in the Logical Model.   The keys are enforced, so that if an enrollment in the XML references a project ID which isn’t defined somewhere else in the XML, it will raise a validation error, which enforces complete, self-referential data sets.  Keys also enable the flattened structure of the schema.  An advantage of a flattened schema is that data elements are not repeated within deeply nested structures.  Keys also makes programming simpler, since there are not so many nested logic structures to handle.  The flattened structure is also more flexible, since not every related data element has to be mentioned within the same tree branch of the XML.
Conditional Validation
The ability to check for a specific precondition before validating is employed in HMIS XML Schema v6.  The main use is checking first to see if a previous question has been answered in a specific way before allowing a follow-up question to be asked.  As with the CSV specification, dependent fields will be null unless the parent field contains a value defined by the HMIS Data Dictionary as triggering the dependent field.  Conditional validation is only applied for most newly added questions introduced in 2017 v of the HUD HMIS Data Standard, so the coverage of all possible conditional logic is not comprehensive.  The main purpose of this conditional validation is to catch typical problems, and to enforce some of the most clearly described question workflows in the Data Standard.  Conditional logic is implemented using XPath 2.0 assertions, similar to the existing key reference and cardinality enforcement assertions.  This conditional validation can slow the validation time for large XML files, so it can be turned off by simply commenting out the various lines in the v6 Schema beginning with “assert”.  A regular expression run to remove or comment out all lines in a schema that begin with <xs:assert> would accomplish this task, and allow for “primary validation” which excludes the more time consuming “secondary validation” with conditional assertions.  A good testing approach is to test small development XML instance files first with secondary conditional assertion validation, and then use the primary validation for fast production validation of large files. 

Here is an example of conditional validation in the schema (at line 587), using an assertion:
<!--Testing if DisabilityType is 8, before allowing use of TcellCountAvailable-→
<xs:assert test="if (hmis:TCellCountAvailable) then boolean(hmis:DisabilityType/text()='8') else true()"/>

Examples
Example Instances
A fairly exhaustive example HMIS XML instance is available in the repository for download.  A minimal instance is also in the repository for download.
Example Custom Extension and Instance 
An example HMIS XML extension is available in the repository for download.  An instance applying this extension is also in the repository for download.  

Change Process
To request changes to the HUD HMIS XML Schema, there are multiple ways to register requests.
    • A software issue tracker is available at: https://github.com/hmis-interop/xml/issues
    • A HUD sponsored HMIS SoftwareSoftwareProvider forum regularly hosts a revision process to maintain the HMIS XML Schema.  Contact HUD Ask A Question (AAQ) to request a login to participate.
    • Contact HUD AAQ to discuss the request with a HUD Technical Assistance representative
HMIS XML Schema Hosting
HMIS XML schema development archives and issues list is unofficially (not an official HUD website) hosted at: https://github.com/hmis-interop/xml.  The tags on that site contain the various versions available, from which the differences between versions can be listed in detail.



Further Information
Contact the HUD Exchange’s “Ask A Question” portal to request general assistance with the HMIS XML Schema. To log a detailed change directly, an issue tracker is available.


Overview of Changes

Change List

    • FY2020 changes – all changes listed here: https://github.com/hmis-interop/xml/compare/v6.1.2...FY2020
    • renumbered Project Information (2.2->2.02)
    • reordered fields in organization type 
    • added VictimServiceProvider to organization type (was in project)
    • reordered fields in project type
    • changed hmis:projectType #14 “Coordinated Assessment” to “Coordinated Entry”
    • ProjectType is now minOccurs="0", and validation added for checking if Testing if ContinuumProject is not 1, before allowing null ProjectType
    • added test if ResidentialAffiliation is null when ProjectType != 6, but not enforcing that ResidentialAffiliation is populated when it is == "6"
    • added test if TrackingMethod is Null if ProjectType != 1
    • added HMIS Participating Bed from 2.7 Bed Inventory element and renamed to HMIS Participating Project
    • added PIT Count to Project
    • geography renamed to ProjectCoC
    • EnrollmentCoC in current FY2020 Logical Model renamed to HouseholdCoC in XML
    • moved GeographyType down to end of ProjectCoC (was Geography)
    • added “44 = HUD: CoC – Joint Component TH/RRH”, 45 = VA: Grant per Diem – Case Management/Housing Retention, and 46 = Local or Other Funding Source (Please Specify) to hmis:federalPartnerProgramsAndComponents.  
    • removed 32 = VA: Compensated Work Therapy Transitional Residence from hmis:federalPartnerProgramsAndComponents
    • added OtherFunder data element.
    • added validation to OtherFunder that it is Dependent to Field 1 Response 46
    • renumbered Bed and Unity Inventory Information (2.7->2.07)
    • removed InformationDate from hmis:inventory
    • reordered elements to match Data Dictionary in hmis:inventory
    • added *.beds to each of the 2.07.7 hmis:bedtype picklists values, to match the Data Dictionary
    • hmis:BedType in hmis:inventory, changed to hmis:ESBedType, with same picklist
    • hmis:InventoryStartDate, hmis:InventoryEndDate, hmis:CHBedInventory, VetBedInventory, YouthBedInventory, hmis:BedInventory reordered to match FY2020 Data Standard.
    • hmis:YouthVetBedInventory, CHYouthBedInventory, OtherBedInventory added
    • reorganized hmis:client data element order to adhere to Data Standard, PersonalID renumbered and descriptions updated
    • Gender picklist updated to match 2020 Data Standard
    • added logic documentation for hmis:DisablingCondition
    • reordered elements to match Data Dictionary in hmis:project
    • HousingType moved from hmis:inventory to hmis:project
    • hmis:livingSituation picklist changed
    • consolidated hmis:destination into hmis:livingSituation
    • picklist modifications to PriorLivingSituation in hmis:enrollment
    • added hmis:Assessments, hmis:AssessmentQuestions, hmis:AssessmentResults, and hmis:Event
    • added hmis:User(Identifier)
    • added hmis:CurrentLivingSituation
    • PATH items move from 4.20 to P3
    • added picklist option to hmis:reasonNotEnrolled, 3=“Unable to locate client”
    • added picklist option to hmis:sexualOrientation, 6=”Other”
    • added hmis:SexualOrientationOther
    • edited V2.2 and V3.3 picklist values in hmis:TypeProvided
          
